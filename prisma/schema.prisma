generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  Post Post[]
}

model Post {
  id                   Int      @id @default(autoincrement())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  title                String
  description          String
  content              String
  published            Boolean  @default(false)
  author               User     @relation(fields: [authorId], references: [id])
  authorId             Int
  category             Category @relation(fields: [categoryId], references: [id])
  categoryId           Int
  relatedPosts         Post[]   @relation("relatedPosts")
  relatedPostsRelation Post[]   @relation("relatedPosts")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  password  String
  role      Role    @default(USER)
  posts     Post[]
  tokens      Token[]
}

enum Role {
  USER
  ADMIN
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime
 
  // Relation fields
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

enum TokenType {
  EMAIL // used as a short-lived token sent to the user's email
  API
}


